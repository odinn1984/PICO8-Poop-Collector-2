name: Staging
on:
  push:
    branches:
      - staging

jobs:
  SemanticRelease:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.semantic.outputs.new_release_published }}
      version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 16
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  UploadArtifacts:
    name: Export Binaries
    runs-on: ubuntu-latest
    needs:
      - SemanticRelease
    strategy:
      fail-fast: true
    container:
      image: odinn1986/pico8:0.2.4c
      credentials:
        username: odinn1986
        password: ${{ secrets.RO_DOCKERHUB_ACCESS_TOKEN }}
    steps:
      - name: Checkout
        if: needs.SemanticRelease.outputs.released == 'true'
        uses: actions/checkout@v3
      - name: Export ${{ secrets.ARTIFACT_NAME }}.bin
        if: needs.SemanticRelease.outputs.released == 'true'
        run: xvfb-run -a -s "-screen 0 1400x900x24 +extension RANDR" -- pico8 -export ${{ secrets.ARTIFACT_NAME }}.bin ${{ secrets.ARTIFACT_NAME }}.p8
      - name: Upload Artifacts
        if: needs.SemanticRelease.outputs.released == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ secrets.ARTIFACT_NAME }}
          retention-days: 7
          path: |
            ${{ secrets.ARTIFACT_NAME }}.bin/${{ secrets.ARTIFACT_NAME }}_linux.zip
            ${{ secrets.ARTIFACT_NAME }}.bin/${{ secrets.ARTIFACT_NAME }}_windows.zip
            ${{ secrets.ARTIFACT_NAME }}.bin/${{ secrets.ARTIFACT_NAME }}_osx.zip

  UploadArtifactsToRelease:
    name: Upload Artifacts To Release
    runs-on: ubuntu-latest
    needs:
      - UploadArtifacts
      - SemanticRelease
    strategy:
      fail-fast: true
      matrix:
        channel:
          - windows
          - linux
          - osx
    steps:
      - name: Download Artifacts
        if: needs.SemanticRelease.outputs.released == 'true'
        uses: actions/download-artifact@v3
        with:
          name: ${{ secrets.ARTIFACT_NAME }}
      - name: Upload ${{ matrix.channel }} Binary To Release
        if: needs.SemanticRelease.outputs.released == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ secrets.ARTIFACT_NAME }}_${{ matrix.channel }}.zip
          asset_name: ${{ secrets.ARTIFACT_NAME }}_${{ matrix.channel }}.zip
          tag: v${{ needs.SemanticRelease.outputs.version }}
          overwrite: true
